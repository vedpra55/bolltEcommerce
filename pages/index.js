import Head from "next/head";
import useSWR, { SWRConfig } from "swr";
import {
  categoryFetcher,
  attributeProductsLimitedFetcher,
} from "../supabaseApi/fether";

import {
  getCategory,
  getAttributeLimitedProducts,
} from "../supabaseApi/getProductHandler";

// Components
import CategoryList from "../components/home/categoryList";
import FilterProductsList from "../components/home/filterProductsList";

function SWRFallback() {
  const { data: allCategory } = useSWR(
    "/api/productsApi/getAllCategoryApi",
    categoryFetcher
  );
  const { data: newProducts } = useSWR(
    "/api/productsApi/getAttributeProductsLimited",
    () => attributeProductsLimitedFetcher("New")
  );
  const { data: bestSellerProducts } = useSWR(
    "/api/productsApi/getAttributeProductsLimited?name=Best Seller",
    () => attributeProductsLimitedFetcher("Best Seller")
  );
  const { data: ourPickProducts } = useSWR(
    "/api/productsApi/getAttributeProductsLimited?name=Our Pick",
    () => attributeProductsLimitedFetcher("Our Pick")
  );

  return (
    <div>
      <CategoryList
        category={allCategory[0] ? allCategory : allCategory.data}
      />
      <FilterProductsList
        bestSellerProducts={bestSellerProducts}
        ourPickProducts={ourPickProducts}
        newProducts={newProducts}
      />
    </div>
  );
}

export default function Home({ fallback }) {
  return (
    <div>
      <Head>
        <title>Ecommerce</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <SWRConfig value={{ fallback }}>
        <SWRFallback />
      </SWRConfig>
    </div>
  );
}

export async function getStaticProps() {
  const categories = await getCategory();
  const newProducts = await getAttributeLimitedProducts("New");
  const bestSellerProducts = await getAttributeLimitedProducts("Best Seller");
  const ourPickProducts = await getAttributeLimitedProducts("Our Pick");
  return {
    props: {
      fallback: {
        "/api/productsApi/getAllCategoryApi": categories,
        "/api/productsApi/getAttributeProductsLimited": newProducts,
        "/api/productsApi/getAttributeProductsLimited?name=Best Seller":
          bestSellerProducts,
        "/api/productsApi/getAttributeProductsLimited?name=Our Pick":
          ourPickProducts,
      },
    },
    revalidate: 10,
  };
}
